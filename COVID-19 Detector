{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"COVID-19 Detector","provenance":[{"file_id":"154f9LuZSz8JeckNzx8t0IszIHgp49myI","timestamp":1618650019584}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"jcSTCf3Xp2f9","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1635402182181,"user_tz":-330,"elapsed":8804,"user":{"displayName":"Addhyan Garg","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi8z0i_UERBmHE9rA0hp6i8etq2wnLZYRDC4gjp5A=s64","userId":"17569604095461225003"}},"outputId":"bfe8577d-ae50-4b4c-d0b2-c84873c4cbab"},"source":["# Dataset : http://cb.lk/covid_19\n"," \n","!wget http://cb.lk/covid_19"],"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["--2021-10-28 06:22:53--  http://cb.lk/covid_19\n","Resolving cb.lk (cb.lk)... 172.67.187.81, 104.21.72.203, 2606:4700:3031::6815:48cb, ...\n","Connecting to cb.lk (cb.lk)|172.67.187.81|:80... connected.\n","HTTP request sent, awaiting response... 301 Moved Permanently\n","Location: https://cb.lk/covid_19 [following]\n","--2021-10-28 06:22:53--  https://cb.lk/covid_19\n","Connecting to cb.lk (cb.lk)|172.67.187.81|:443... connected.\n","HTTP request sent, awaiting response... 302 Found\n","Location: https://www.dropbox.com/s/7rjw6oet4za01op/CovidDataset-20200427T133042Z-001.zip?dl=0 [following]\n","--2021-10-28 06:22:54--  https://www.dropbox.com/s/7rjw6oet4za01op/CovidDataset-20200427T133042Z-001.zip?dl=0\n","Resolving www.dropbox.com (www.dropbox.com)... 162.125.5.18, 2620:100:601d:18::a27d:512\n","Connecting to www.dropbox.com (www.dropbox.com)|162.125.5.18|:443... connected.\n","HTTP request sent, awaiting response... 301 Moved Permanently\n","Location: /s/raw/7rjw6oet4za01op/CovidDataset-20200427T133042Z-001.zip [following]\n","--2021-10-28 06:22:54--  https://www.dropbox.com/s/raw/7rjw6oet4za01op/CovidDataset-20200427T133042Z-001.zip\n","Reusing existing connection to www.dropbox.com:443.\n","HTTP request sent, awaiting response... 302 Found\n","Location: https://ucdabcc4505b3622d7b23265e248.dl.dropboxusercontent.com/cd/0/inline/BY7m8ymerGAm7EWbbU4tHnXuJavdbkGi8oc7-BNbCYa2WHWQej4Y4xF62eNhLp_esdiOMC1Zr42O_Za12YWUMSC1G9gQbhZtdlTVoeoX-uXMfg6Gi-ggaqe-yZKAjAiaefV2FJH-Hf_FTGgUZQlpFpIT/file# [following]\n","--2021-10-28 06:22:54--  https://ucdabcc4505b3622d7b23265e248.dl.dropboxusercontent.com/cd/0/inline/BY7m8ymerGAm7EWbbU4tHnXuJavdbkGi8oc7-BNbCYa2WHWQej4Y4xF62eNhLp_esdiOMC1Zr42O_Za12YWUMSC1G9gQbhZtdlTVoeoX-uXMfg6Gi-ggaqe-yZKAjAiaefV2FJH-Hf_FTGgUZQlpFpIT/file\n","Resolving ucdabcc4505b3622d7b23265e248.dl.dropboxusercontent.com (ucdabcc4505b3622d7b23265e248.dl.dropboxusercontent.com)... 162.125.5.15, 2620:100:601d:15::a27d:50f\n","Connecting to ucdabcc4505b3622d7b23265e248.dl.dropboxusercontent.com (ucdabcc4505b3622d7b23265e248.dl.dropboxusercontent.com)|162.125.5.15|:443... connected.\n","HTTP request sent, awaiting response... 302 Found\n","Location: /cd/0/inline2/BY70ZFHQdFTK0FLkmPfQFjhgLIo9jKy7IrGy2VUT8u_7nYW6RppyVT6i5po7EmCOc2pJvLlYR5JxN-b_wCQQgezGeKr0ZhUnr71VpVOEqk46xcvvny9tb_SqheL4K6XRfNKkCmoWaEvYjyW7fkrjlZLp3S_XdGN1P7YhtVzap7K141JAKwd_KsmeV7JxNKobiUrcN2ulk5ZLiZ10Nc3KLR67Dv6oaNDljePTaZTl9-a8RIIgF8Xk8YbwZakoICyYoyE-a24ZJt7WfDVFqBTyIt0UsTyUsLAIYeqXHIxSCHKXunOff-ZyksM_J7VqR_h8Q4VgylfNYcXyteO97roprP9TX_MAOK_t8-J3PjJjyazKAxsqGLDm9-FCtVA2UGh9z-A/file [following]\n","--2021-10-28 06:22:55--  https://ucdabcc4505b3622d7b23265e248.dl.dropboxusercontent.com/cd/0/inline2/BY70ZFHQdFTK0FLkmPfQFjhgLIo9jKy7IrGy2VUT8u_7nYW6RppyVT6i5po7EmCOc2pJvLlYR5JxN-b_wCQQgezGeKr0ZhUnr71VpVOEqk46xcvvny9tb_SqheL4K6XRfNKkCmoWaEvYjyW7fkrjlZLp3S_XdGN1P7YhtVzap7K141JAKwd_KsmeV7JxNKobiUrcN2ulk5ZLiZ10Nc3KLR67Dv6oaNDljePTaZTl9-a8RIIgF8Xk8YbwZakoICyYoyE-a24ZJt7WfDVFqBTyIt0UsTyUsLAIYeqXHIxSCHKXunOff-ZyksM_J7VqR_h8Q4VgylfNYcXyteO97roprP9TX_MAOK_t8-J3PjJjyazKAxsqGLDm9-FCtVA2UGh9z-A/file\n","Reusing existing connection to ucdabcc4505b3622d7b23265e248.dl.dropboxusercontent.com:443.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 140830621 (134M) [application/zip]\n","Saving to: ‘covid_19’\n","\n","covid_19            100%[===================>] 134.31M  27.4MB/s    in 5.5s    \n","\n","2021-10-28 06:23:01 (24.2 MB/s) - ‘covid_19’ saved [140830621/140830621]\n","\n"]}]},{"cell_type":"code","metadata":{"id":"7FPSlY63qFJ6","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1635402257744,"user_tz":-330,"elapsed":1252,"user":{"displayName":"Addhyan Garg","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi8z0i_UERBmHE9rA0hp6i8etq2wnLZYRDC4gjp5A=s64","userId":"17569604095461225003"}},"outputId":"a4ef56bc-f152-49de-f43d-f455725e9e48"},"source":["!unzip covid_19"],"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Archive:  covid_19\n","  inflating: CovidDataset/Val/Covid/88de9d8c39e946abd495b37cd07d89e5-6531-0.jpg  \n","  inflating: CovidDataset/Val/Covid/covid-19-pneumonia-8.jpg  \n","  inflating: CovidDataset/Val/Covid/85E52EB3-56E9-4D67-82DA-DEA247C82886.jpeg  \n","  inflating: CovidDataset/Val/Covid/4-x-day1.jpg  \n","  inflating: CovidDataset/Val/Covid/covid-19-pneumonia-53.jpg  \n","  inflating: CovidDataset/Val/Covid/4e43e48d52c9e2d4c6c1fb9bc1544f_jumbo.jpeg  \n","  inflating: CovidDataset/Val/Covid/covid-19-pneumonia-35-1.jpg  \n","  inflating: CovidDataset/Val/Covid/53EC07C9-5CC6-4BE4-9B6F-D7B0D72AAA7E.jpeg  \n","  inflating: CovidDataset/Val/Covid/6CB4EFC6-68FA-4CD5-940C-BEFA8DAFE9A7.jpeg  \n","  inflating: CovidDataset/Val/Covid/58cb9263f16e94305c730685358e4e_jumbo.jpeg  \n","  inflating: CovidDataset/Val/Covid/6b3bdbc31f65230b8cdcc3cef5f8ba8a-40ac-0.jpg  \n","  inflating: CovidDataset/Val/Covid/auntminnie-d-2020_01_28_23_51_6665_2020_01_28_Vietnam_coronavirus.jpeg  \n","  inflating: CovidDataset/Val/Covid/6b44464d-73a7-4cf3-bbb6-ffe7168300e3.annot.original.jpeg  \n","  inflating: CovidDataset/Val/Covid/88de9d8c39e946abd495b37cd07d89e5-2ee6-0.jpg  \n","  inflating: CovidDataset/Val/Covid/31BA3780-2323-493F-8AED-62081B9C383B.jpeg  \n","  inflating: CovidDataset/Val/Covid/B2D20576-00B7-4519-A415-72DE29C90C34.jpeg  \n","  inflating: CovidDataset/Val/Covid/6C94A287-C059-46A0-8600-AFB95F4727B7.jpeg  \n","  inflating: CovidDataset/Train/Covid/1-s2.0-S1684118220300682-main.pdf-003-b2.png  \n","  inflating: CovidDataset/Val/Covid/41591_2020_819_Fig1_HTML.webp-day5.png  \n","  inflating: CovidDataset/Val/Covid/41591_2020_819_Fig1_HTML.webp-day10.png  \n","  inflating: CovidDataset/Train/Covid/1-s2.0-S1684118220300682-main.pdf-003-b1.png  \n","  inflating: CovidDataset/Val/Covid/16654_2_1.jpg  \n","  inflating: CovidDataset/Train/Covid/nCoV-radiol.2020200269.fig1-day7.jpeg  \n","  inflating: CovidDataset/Val/Covid/auntminnie-c-2020_01_28_23_51_6665_2020_01_28_Vietnam_coronavirus.jpeg  \n","  inflating: CovidDataset/Train/Covid/7-fatal-covid19.jpg  \n","  inflating: CovidDataset/Train/Covid/auntminnie-b-2020_01_28_23_51_6665_2020_01_28_Vietnam_coronavirus.jpeg  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-0986-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0332-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/extubation-13.jpg  \n","  inflating: CovidDataset/Val/Covid/covid-19-pneumonia-35-2.jpg  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-1337-0001.jpeg  \n","  inflating: CovidDataset/Val/Covid/covid-19-pneumonia-12.jpg  \n","  inflating: CovidDataset/Train/Normal/IM-0644-0001-0002.jpeg  \n","  inflating: CovidDataset/Train/Covid/ryct.2020200034.fig5-day7.jpeg  \n","  inflating: CovidDataset/Val/Covid/7AF6C1AF-D249-4BD2-8C26-449304105D03.jpeg  \n","  inflating: CovidDataset/Train/Covid/covid-19-pneumonia-15-PA.jpg  \n","  inflating: CovidDataset/Train/Covid/1-s2.0-S1684118220300608-main.pdf-002.jpg  \n","  inflating: CovidDataset/Train/Normal/IM-0528-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/80446565-E090-4187-A031-9D3CEAA586C8.jpeg  \n","  inflating: CovidDataset/Train/Covid/1-s2.0-S0929664620300449-gr2_lrg-d.jpg  \n","  inflating: CovidDataset/Train/Covid/covid-19-pneumonia-bilateral.jpg  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-1020-0001-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/E63574A7-4188-4C8D-8D17-9D67A18A1AFA.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0327-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/AR-1.jpg  \n","  inflating: CovidDataset/Train/Covid/F2DE909F-E19C-4900-92F5-8F435B031AC6.jpeg  \n","  inflating: CovidDataset/Val/Normal/NORMAL2-IM-0851-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/covid-19-pneumonia-2.jpg  \n","  inflating: CovidDataset/Train/Normal/IM-0539-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0495-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0533-0001-0002.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0724-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/1.CXRCTThoraximagesofCOVID-19fromSingapore.pdf-001-fig2a.png  \n","  inflating: CovidDataset/Train/Covid/1-s2.0-S0140673620303706-fx1_lrg.jpg  \n","  inflating: CovidDataset/Train/Normal/IM-0491-0001-0002.jpeg  \n","  inflating: CovidDataset/Train/Covid/covid-19-pneumonia-58-day-9.jpg  \n","  inflating: CovidDataset/Train/Normal/IM-0555-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/1.CXRCTThoraximagesofCOVID-19fromSingapore.pdf-000-fig1b.png  \n","  inflating: CovidDataset/Train/Normal/IM-0326-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/covid-19-caso-70-1-PA.jpg  \n","  inflating: CovidDataset/Train/Covid/1.CXRCTThoraximagesofCOVID-19fromSingapore.pdf-001-fig2b.png  \n","  inflating: CovidDataset/Val/Normal/NORMAL2-IM-0730-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0451-0001.jpeg  \n","  inflating: CovidDataset/Val/Covid/7C69C012-7479-493F-8722-ABC29C60A2DD.jpeg  \n","  inflating: CovidDataset/Train/Covid/16660_2_1.jpg  \n","  inflating: CovidDataset/Train/Covid/1-s2.0-S1684118220300608-main.pdf-001.jpg  \n","  inflating: CovidDataset/Train/Covid/kjr-21-e24-g003-l-a.jpg  \n","  inflating: CovidDataset/Train/Covid/nejmoa2001191_f1-PA.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0534-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/kjr-21-e24-g002-l-a.jpg  \n","  inflating: CovidDataset/Train/Covid/covid-19-pneumonia-38-pa.jpg  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-0529-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/9C34AF49-E589-44D5-92D3-168B3B04E4A6.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0221-0001.jpeg  \n","  inflating: CovidDataset/Val/Normal/NORMAL2-IM-1191-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-0831-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0500-0001.jpeg  \n","  inflating: CovidDataset/Val/Normal/NORMAL2-IM-1228-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/extubation-1.jpg  \n","  inflating: CovidDataset/Train/Covid/covid-19-infection-exclusive-gastrointestinal-symptoms-l.png  \n","  inflating: CovidDataset/Val/Normal/NORMAL2-IM-1037-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-0956-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-0847-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0389-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0660-0001-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/16672_1_1.jpg  \n","  inflating: CovidDataset/Train/Normal/IM-0700-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-1305-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/16660_4_1.jpg  \n","  inflating: CovidDataset/Val/Covid/353889E0-A1E8-4F9E-A0B8-F24F36BCFBFB.jpeg  \n","  inflating: CovidDataset/Train/Covid/covid-19-pneumonia-22-day2-pa.png  \n","  inflating: CovidDataset/Train/Normal/IM-0472-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-1202-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-1188-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/2C26F453-AF3B-4517-BB9E-802CF2179543.jpeg  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-1290-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-1346-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-1345-0001-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/radiol.2020200274.fig3d.png  \n","  inflating: CovidDataset/Train/Normal/IM-0669-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0270-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/covid-19-pneumonia-28.png  \n","  inflating: CovidDataset/Train/Covid/ryct.2020200034.fig2.jpeg  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-1287-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/1.CXRCTThoraximagesofCOVID-19fromSingapore.pdf-000-fig1a.png  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-0626-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0543-0001.jpeg  \n","  inflating: CovidDataset/Val/Normal/NORMAL2-IM-0857-0001.jpeg  \n","  inflating: CovidDataset/Val/Normal/NORMAL2-IM-0905-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/1-s2.0-S0929664620300449-gr2_lrg-a.jpg  \n","  inflating: CovidDataset/Val/Covid/16654_1_1.png  \n","  inflating: CovidDataset/Train/Covid/kjr-21-e24-g001-l-a.jpg  \n","  inflating: CovidDataset/Train/Normal/IM-0433-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/covid-19-pneumonia-58-day-10.jpg  \n","  inflating: CovidDataset/Val/Covid/16654_4_1.jpg  \n","  inflating: CovidDataset/Val/Normal/NORMAL2-IM-0790-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-1326-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0563-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/ae6c954c0039de4b5edee53865ffee43-e6c8-0.jpg  \n","  inflating: CovidDataset/Val/Covid/23E99E2E-447C-46E5-8EB2-D35D12473C39.png  \n","  inflating: CovidDataset/Train/Covid/gr1_lrg-a.jpg  \n","  inflating: CovidDataset/Train/Normal/IM-0564-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-0499-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/16663_1_1.jpg  \n","  inflating: CovidDataset/Train/Covid/extubation-8.jpg  \n","  inflating: CovidDataset/Train/Covid/paving.jpg  \n","  inflating: CovidDataset/Train/Normal/IM-0529-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0425-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0439-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0491-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0337-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/all14238-fig-0001-m-b.jpg  \n","  inflating: CovidDataset/Train/Covid/covid-19-infection-exclusive-gastrointestinal-symptoms-pa.png  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-1320-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/1.CXRCTThoraximagesofCOVID-19fromSingapore.pdf-002-fig3b.png  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-0815-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/nejmoa2001191_f5-PA.jpeg  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-1336-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0369-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-1300-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-1295-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-0518-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/covid-19-pneumonia-34.png  \n","  inflating: CovidDataset/Train/Normal/IM-0385-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/F63AB6CE-1968-4154-A70F-913AF154F53D.jpeg  \n","  inflating: CovidDataset/Val/Normal/NORMAL2-IM-0842-0001.jpeg  \n","  inflating: CovidDataset/Val/Normal/NORMAL2-IM-0416-0001-0001.jpeg  \n","  inflating: CovidDataset/Val/Normal/NORMAL2-IM-1275-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0467-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-1344-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0301-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0421-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/ryct.2020200034.fig5-day0.jpeg  \n","  inflating: CovidDataset/Train/Covid/covid-19-pneumonia-58-day-3.jpg  \n","  inflating: CovidDataset/Train/Covid/covid-19-pneumonia-mild.JPG  \n","  inflating: CovidDataset/Val/Normal/NORMAL2-IM-0859-0001.jpeg  \n","  inflating: CovidDataset/Val/Normal/NORMAL2-IM-1237-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-1103-0001-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/1-s2.0-S1684118220300682-main.pdf-002-a2.png  \n","  inflating: CovidDataset/Val/Normal/NORMAL2-IM-0535-0001-0002.jpeg  \n","  inflating: CovidDataset/Train/Covid/1.CXRCTThoraximagesofCOVID-19fromSingapore.pdf-003-fig4b.png  \n","  inflating: CovidDataset/Train/Normal/IM-0461-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0372-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0666-0001-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-0840-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/ryct.2020200034.fig5-day4.jpeg  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-0798-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0351-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/auntminnie-a-2020_01_28_23_51_6665_2020_01_28_Vietnam_coronavirus.jpeg  \n","  inflating: CovidDataset/Train/Covid/1-s2.0-S1684118220300682-main.pdf-002-a1.png  \n","  inflating: CovidDataset/Val/Normal/NORMAL2-IM-1240-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/93FE0BB1-022D-4F24-9727-987A07975FFB.jpeg  \n","  inflating: CovidDataset/Train/Covid/16660_1_1.jpg  \n","  inflating: CovidDataset/Train/Covid/figure1-5e71be566aa8714a04de3386-98-left.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0703-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/covid-19-pneumonia-7-PA.jpg  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-1277-0001-0002.jpeg  \n","  inflating: CovidDataset/Train/Covid/8FDE8DBA-CFBD-4B4C-B1A4-6F36A93B7E87.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0482-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0656-0001-0002.jpeg  \n","  inflating: CovidDataset/Train/Covid/16664_1_1.jpg  \n","  inflating: CovidDataset/Train/Normal/IM-0430-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/covid-19-pneumonia-67.jpeg  \n","  inflating: CovidDataset/Train/Covid/ciaa199.pdf-001-a.png  \n","  inflating: CovidDataset/Train/Normal/IM-0187-0001.jpeg  \n","  inflating: CovidDataset/Val/Normal/NORMAL2-IM-0652-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0691-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/CD50BA96-6982-4C80-AE7B-5F67ACDBFA56.jpeg  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-0976-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/covid-19-pneumonia-20-pa-on-admission.jpg  \n","  inflating: CovidDataset/Train/Covid/1-s2.0-S0929664620300449-gr2_lrg-c.jpg  \n","  inflating: CovidDataset/Train/Covid/fff49165-b22d-4bb4-b9d1-d5d62c52436c.annot.original.png  \n","  inflating: CovidDataset/Train/Covid/1.CXRCTThoraximagesofCOVID-19fromSingapore.pdf-002-fig3a.png  \n","  inflating: CovidDataset/Val/Normal/NORMAL2-IM-0395-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0182-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/covid-19-pneumonia-evolution-over-a-week-1-day0-PA.jpg  \n","  inflating: CovidDataset/Val/Normal/NORMAL2-IM-0914-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/covid-19-pneumonia-30-PA.jpg  \n","  inflating: CovidDataset/Train/Covid/nejmc2001573_f1a.jpeg  \n","  inflating: CovidDataset/Train/Covid/kjr-21-e25-g001-l-a.jpg  \n","  inflating: CovidDataset/Val/Normal/NORMAL2-IM-0873-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-0501-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0667-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0551-0001-0002.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0176-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/lancet-case2b.jpg  \n","  inflating: CovidDataset/Train/Normal/IM-0713-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/all14238-fig-0001-m-c.jpg  \n","  inflating: CovidDataset/Val/Covid/covid-19-pneumonia-14-PA.png  \n","  inflating: CovidDataset/Val/Normal/NORMAL2-IM-0851-0001-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-1154-0001-0002.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0619-0001.jpeg  \n","  inflating: CovidDataset/Val/Normal/NORMAL2-IM-0441-0001.jpeg  \n","  inflating: CovidDataset/Val/Normal/NORMAL2-IM-0765-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0172-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0551-0001-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/gr1_lrg-b.jpg  \n","  inflating: CovidDataset/Train/Covid/1-s2.0-S0929664620300449-gr2_lrg-b.jpg  \n","  inflating: CovidDataset/Train/Normal/IM-0514-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/covid-19-pneumonia-20.jpg  \n","  inflating: CovidDataset/Train/Normal/IM-0544-0001.jpeg  \n","  inflating: CovidDataset/Val/Normal/NORMAL2-IM-1022-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-0935-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/covid-19-pneumonia-22-day1-pa.png  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-1288-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/16669_1_1.jpeg  \n","  inflating: CovidDataset/Train/Covid/nejmoa2001191_f4.jpeg  \n","  inflating: CovidDataset/Val/Normal/NORMAL2-IM-0462-0001.jpeg  \n","  inflating: CovidDataset/Val/Normal/NORMAL2-IM-0894-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/nejmc2001573_f1b.jpeg  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-1094-0001-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0543-0001-0002.jpeg  \n","  inflating: CovidDataset/Train/Covid/16669_3_1.jpeg  \n","  inflating: CovidDataset/Train/Covid/covid-19-pneumonia-58-day-7.jpg  \n","  inflating: CovidDataset/Train/Normal/IM-0536-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-1214-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/AR-2.jpg  \n","  inflating: CovidDataset/Train/Covid/9fdd3c3032296fd04d2cad5d9070d4_jumbo.jpeg  \n","  inflating: CovidDataset/Train/Covid/1B734A89-A1BF-49A8-A1D3-66FAFA4FAC5D.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0156-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-1111-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/FE9F9A5D-2830-46F9-851B-1FF4534959BE.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0429-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/covid-19-pneumonia-44-day-0.jpeg  \n","  inflating: CovidDataset/Val/Normal/NORMAL2-IM-0869-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/figure1-5e75d0940b71e1b702629659-98-right.jpeg  \n","  inflating: CovidDataset/Train/Covid/03BF7561-A9BA-4C3C-B8A0-D3E585F73F3C.jpeg  \n","  inflating: CovidDataset/Train/Covid/ciaa199.pdf-001-c.png  \n","  inflating: CovidDataset/Train/Covid/extubation-4.jpg  \n","  inflating: CovidDataset/Train/Normal/IM-0556-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/1.CXRCTThoraximagesofCOVID-19fromSingapore.pdf-003-fig4a.png  \n","  inflating: CovidDataset/Train/Covid/covid-19-pneumonia-19.jpg  \n","  inflating: CovidDataset/Train/Normal/IM-0392-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0530-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0261-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/1312A392-67A3-4EBF-9319-810CF6DA5EF6.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0525-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/lancet-case2a.jpg  \n","  inflating: CovidDataset/Train/Covid/ciaa199.pdf-001-b.png  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-0941-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0488-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/nejmoa2001191_f3-PA.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0447-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/2966893D-5DDF-4B68-9E2B-4979D5956C8E.jpeg  \n","  inflating: CovidDataset/Train/Covid/ryct.2020200028.fig1a.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0688-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/16660_3_1.jpg  \n","  inflating: CovidDataset/Val/Normal/NORMAL2-IM-1045-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-0978-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/2-chest-filmc.jpg  \n","  inflating: CovidDataset/Val/Normal/NORMAL2-IM-0678-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-0573-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0365-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0300-0001.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0242-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/F4341CE7-73C9-45C6-99C8-8567A5484B63.jpeg  \n","  inflating: CovidDataset/Train/Normal/NORMAL2-IM-1019-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/01E392EE-69F9-4E33-BFCE-E5C968654078.jpeg  \n","  inflating: CovidDataset/Train/Normal/IM-0648-0001.jpeg  \n","  inflating: CovidDataset/Val/Normal/NORMAL2-IM-0408-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/yxppt-2020-02-19_00-51-27_287214-day8.jpg  \n","  inflating: CovidDataset/Train/Normal/IM-0635-0001.jpeg  \n","  inflating: CovidDataset/Train/Covid/radiol.2020200490.fig3.jpeg  \n","  inflating: CovidDataset/Val/Normal/NORMAL2-IM-1060-0001.jpeg  \n"]}]},{"cell_type":"markdown","metadata":{"id":"0RyW0AY18tl7"},"source":["#THE BELOW CELL DEFINES PATH FOR OUT IMPORTED IMAGES\n"]},{"cell_type":"code","metadata":{"id":"klZeEzJSqUvQ","executionInfo":{"status":"ok","timestamp":1635402281441,"user_tz":-330,"elapsed":394,"user":{"displayName":"Addhyan Garg","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi8z0i_UERBmHE9rA0hp6i8etq2wnLZYRDC4gjp5A=s64","userId":"17569604095461225003"}}},"source":["TRAIN_PATH = \"CovidDataset/Train\"\n","VAL_PATH = \"CovidDataset/Test\"\n","\n"],"execution_count":3,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"JGVFCIMd87wY"},"source":["#IMPORTING THE LIBRARIES REQUIRED TO RUN THE SCANS AND DATA\n"]},{"cell_type":"code","metadata":{"id":"1s_VfacWrA-E","executionInfo":{"status":"ok","timestamp":1635402557932,"user_tz":-330,"elapsed":439,"user":{"displayName":"Addhyan Garg","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi8z0i_UERBmHE9rA0hp6i8etq2wnLZYRDC4gjp5A=s64","userId":"17569604095461225003"}}},"source":["import numpy as np\n","import matplotlib.pyplot as plt\n","import keras\n","from keras.layers import *\n","from keras.models import * \n","from keras.preprocessing import image"],"execution_count":5,"outputs":[]},{"cell_type":"code","metadata":{"id":"2vRL0YMtrIsn","executionInfo":{"status":"ok","timestamp":1635403110544,"user_tz":-330,"elapsed":1267,"user":{"displayName":"Addhyan Garg","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi8z0i_UERBmHE9rA0hp6i8etq2wnLZYRDC4gjp5A=s64","userId":"17569604095461225003"}}},"source":["# CNN Based Model in Keras\n","\n","model = Sequential()\n","model.add(Conv2D(32,kernel_size=(3,3),activation='relu',input_shape=(224,224,3)))\n","model.add(Conv2D(64,(3,3),activation='relu'))\n","model.add(MaxPooling2D(pool_size=(2,2)))\n","model.add(Dropout(0.25))\n","\n","model.add(Conv2D(64,(3,3),activation='relu'))\n","model.add(MaxPooling2D(pool_size=(2,2)))\n","model.add(Dropout(0.25))\n","\n","model.add(Conv2D(128,(3,3),activation='relu'))\n","model.add(MaxPooling2D(pool_size=(2,2)))\n","model.add(Dropout(0.25))\n","\n","model.add(Flatten())\n","model.add(Dense(64,activation='relu'))\n","model.add(Dropout(0.5))\n","model.add(Dense(1,activation='sigmoid'))\n","\n","model.compile(loss=keras.losses.binary_crossentropy,optimizer='adam',metrics=['accuracy'])"],"execution_count":7,"outputs":[]},{"cell_type":"code","metadata":{"id":"gNxzu23Ouxcp","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1635403113477,"user_tz":-330,"elapsed":396,"user":{"displayName":"Addhyan Garg","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi8z0i_UERBmHE9rA0hp6i8etq2wnLZYRDC4gjp5A=s64","userId":"17569604095461225003"}},"outputId":"9c53ee4b-9f8c-4724-ed27-63206a23f396"},"source":["model.summary()"],"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","conv2d (Conv2D)              (None, 222, 222, 32)      896       \n","_________________________________________________________________\n","conv2d_1 (Conv2D)            (None, 220, 220, 64)      18496     \n","_________________________________________________________________\n","max_pooling2d (MaxPooling2D) (None, 110, 110, 64)      0         \n","_________________________________________________________________\n","dropout (Dropout)            (None, 110, 110, 64)      0         \n","_________________________________________________________________\n","conv2d_2 (Conv2D)            (None, 108, 108, 64)      36928     \n","_________________________________________________________________\n","max_pooling2d_1 (MaxPooling2 (None, 54, 54, 64)        0         \n","_________________________________________________________________\n","dropout_1 (Dropout)          (None, 54, 54, 64)        0         \n","_________________________________________________________________\n","conv2d_3 (Conv2D)            (None, 52, 52, 128)       73856     \n","_________________________________________________________________\n","max_pooling2d_2 (MaxPooling2 (None, 26, 26, 128)       0         \n","_________________________________________________________________\n","dropout_2 (Dropout)          (None, 26, 26, 128)       0         \n","_________________________________________________________________\n","flatten (Flatten)            (None, 86528)             0         \n","_________________________________________________________________\n","dense (Dense)                (None, 64)                5537856   \n","_________________________________________________________________\n","dropout_3 (Dropout)          (None, 64)                0         \n","_________________________________________________________________\n","dense_1 (Dense)              (None, 1)                 65        \n","=================================================================\n","Total params: 5,668,097\n","Trainable params: 5,668,097\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"code","metadata":{"id":"2nnojiosu2YM","executionInfo":{"status":"ok","timestamp":1635403120269,"user_tz":-330,"elapsed":656,"user":{"displayName":"Addhyan Garg","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi8z0i_UERBmHE9rA0hp6i8etq2wnLZYRDC4gjp5A=s64","userId":"17569604095461225003"}}},"source":["# Train from scratch\n","train_datagen = image.ImageDataGenerator(\n","    rescale = 1./255,\n","    shear_range = 0.2,\n","    zoom_range = 0.2,\n","    horizontal_flip = True,\n",")\n","\n","test_dataset = image.ImageDataGenerator(rescale=1./255)"],"execution_count":9,"outputs":[]},{"cell_type":"code","metadata":{"id":"iLC3vWiHv2s8","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1635403124428,"user_tz":-330,"elapsed":441,"user":{"displayName":"Addhyan Garg","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi8z0i_UERBmHE9rA0hp6i8etq2wnLZYRDC4gjp5A=s64","userId":"17569604095461225003"}},"outputId":"d74a1ce0-f500-460f-9249-f9c00fe29cd9"},"source":["train_generator = train_datagen.flow_from_directory(\n","    'CovidDataset/Train',\n","    target_size = (224,224),\n","    batch_size = 32,\n","    class_mode = 'binary')\n"],"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["Found 224 images belonging to 2 classes.\n"]}]},{"cell_type":"code","metadata":{"id":"q_ov9LTgwQSg","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1635403129519,"user_tz":-330,"elapsed":14,"user":{"displayName":"Addhyan Garg","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi8z0i_UERBmHE9rA0hp6i8etq2wnLZYRDC4gjp5A=s64","userId":"17569604095461225003"}},"outputId":"fd22f477-68cc-4729-a42d-bcf06aa80091"},"source":["train_generator.class_indices"],"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'Covid': 0, 'Normal': 1}"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","metadata":{"id":"0RQ5LeuQwmxj","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1635403139130,"user_tz":-330,"elapsed":403,"user":{"displayName":"Addhyan Garg","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi8z0i_UERBmHE9rA0hp6i8etq2wnLZYRDC4gjp5A=s64","userId":"17569604095461225003"}},"outputId":"d2e374d3-74bc-4acb-c9e9-a5156d6a0c32"},"source":["validation_generator = test_dataset.flow_from_directory(\n","    'CovidDataset/Val',\n","    target_size = (60,60),\n","    batch_size = 32,\n","    class_mode = 'binary')"],"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["Found 60 images belonging to 2 classes.\n"]}]},{"cell_type":"code","metadata":{"id":"pGuVlZF5wZsh","colab":{"base_uri":"https://localhost:8080/","height":542},"executionInfo":{"status":"error","timestamp":1635403543641,"user_tz":-330,"elapsed":71031,"user":{"displayName":"Addhyan Garg","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi8z0i_UERBmHE9rA0hp6i8etq2wnLZYRDC4gjp5A=s64","userId":"17569604095461225003"}},"outputId":"add6a48c-b81a-45d1-8bd6-fb4ffb8bb976"},"source":["hist = model.fit_generator(\n","    train_generator,\n","    steps_per_epoch=7,\n","    epochs = 8,\n","    validation_data = validation_generator,\n","    validation_steps=2\n",")"],"execution_count":14,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/keras/engine/training.py:1972: UserWarning: `Model.fit_generator` is deprecated and will be removed in a future version. Please use `Model.fit`, which supports generators.\n","  warnings.warn('`Model.fit_generator` is deprecated and '\n"]},{"output_type":"stream","name":"stdout","text":["Epoch 1/8\n","7/7 [==============================] - ETA: 0s - loss: 0.6626 - accuracy: 0.5848"]},{"output_type":"error","ename":"InvalidArgumentError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mInvalidArgumentError\u001b[0m                      Traceback (most recent call last)","\u001b[0;32m<ipython-input-14-846e7c5ab043>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      4\u001b[0m     \u001b[0mepochs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m8\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m     \u001b[0mvalidation_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mvalidation_generator\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 6\u001b[0;31m     \u001b[0mvalidation_steps\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      7\u001b[0m )\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/engine/training.py\u001b[0m in \u001b[0;36mfit_generator\u001b[0;34m(self, generator, steps_per_epoch, epochs, verbose, callbacks, validation_data, validation_steps, validation_freq, class_weight, max_queue_size, workers, use_multiprocessing, shuffle, initial_epoch)\u001b[0m\n\u001b[1;32m   1987\u001b[0m         \u001b[0muse_multiprocessing\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0muse_multiprocessing\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1988\u001b[0m         \u001b[0mshuffle\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mshuffle\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1989\u001b[0;31m         initial_epoch=initial_epoch)\n\u001b[0m\u001b[1;32m   1990\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1991\u001b[0m   \u001b[0;34m@\u001b[0m\u001b[0mdoc_controls\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdo_not_generate_docs\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/engine/training.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_batch_size, validation_freq, max_queue_size, workers, use_multiprocessing)\u001b[0m\n\u001b[1;32m   1224\u001b[0m               \u001b[0muse_multiprocessing\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0muse_multiprocessing\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1225\u001b[0m               \u001b[0mreturn_dict\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1226\u001b[0;31m               _use_cached_eval_dataset=True)\n\u001b[0m\u001b[1;32m   1227\u001b[0m           \u001b[0mval_logs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m'val_'\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mval\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mval\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mval_logs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1228\u001b[0m           \u001b[0mepoch_logs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mval_logs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/engine/training.py\u001b[0m in \u001b[0;36mevaluate\u001b[0;34m(self, x, y, batch_size, verbose, sample_weight, steps, callbacks, max_queue_size, workers, use_multiprocessing, return_dict, **kwargs)\u001b[0m\n\u001b[1;32m   1499\u001b[0m             \u001b[0;32mwith\u001b[0m \u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mprofiler\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexperimental\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mTrace\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'test'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstep_num\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mstep\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0m_r\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1500\u001b[0m               \u001b[0mcallbacks\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mon_test_batch_begin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstep\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1501\u001b[0;31m               \u001b[0mtmp_logs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtest_function\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0miterator\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1502\u001b[0m               \u001b[0;32mif\u001b[0m \u001b[0mdata_handler\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshould_sync\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1503\u001b[0m                 \u001b[0mcontext\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0masync_wait\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/def_function.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    883\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    884\u001b[0m       \u001b[0;32mwith\u001b[0m \u001b[0mOptionalXlaContext\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_jit_compile\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 885\u001b[0;31m         \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    886\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    887\u001b[0m       \u001b[0mnew_tracing_count\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexperimental_get_tracing_count\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/def_function.py\u001b[0m in \u001b[0;36m_call\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    922\u001b[0m       \u001b[0;31m# In this case we have not created variables on the first call. So we can\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    923\u001b[0m       \u001b[0;31m# run the first trace but we should fail if variables are created.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 924\u001b[0;31m       \u001b[0mresults\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_stateful_fn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    925\u001b[0m       \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_created_variables\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mALLOW_DYNAMIC_VARIABLE_CREATION\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    926\u001b[0m         raise ValueError(\"Creating variables on a non-first call to a function\"\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   3038\u001b[0m        filtered_flat_args) = self._maybe_define_function(args, kwargs)\n\u001b[1;32m   3039\u001b[0m     return graph_function._call_flat(\n\u001b[0;32m-> 3040\u001b[0;31m         filtered_flat_args, captured_inputs=graph_function.captured_inputs)  # pylint: disable=protected-access\n\u001b[0m\u001b[1;32m   3041\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3042\u001b[0m   \u001b[0;34m@\u001b[0m\u001b[0mproperty\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36m_call_flat\u001b[0;34m(self, args, captured_inputs, cancellation_manager)\u001b[0m\n\u001b[1;32m   1962\u001b[0m       \u001b[0;31m# No tape is watching; skip to running the function.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1963\u001b[0m       return self._build_call_outputs(self._inference_function.call(\n\u001b[0;32m-> 1964\u001b[0;31m           ctx, args, cancellation_manager=cancellation_manager))\n\u001b[0m\u001b[1;32m   1965\u001b[0m     forward_backward = self._select_forward_and_backward_functions(\n\u001b[1;32m   1966\u001b[0m         \u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36mcall\u001b[0;34m(self, ctx, args, cancellation_manager)\u001b[0m\n\u001b[1;32m    594\u001b[0m               \u001b[0minputs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    595\u001b[0m               \u001b[0mattrs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mattrs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 596\u001b[0;31m               ctx=ctx)\n\u001b[0m\u001b[1;32m    597\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    598\u001b[0m           outputs = execute.execute_with_cancellation(\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/execute.py\u001b[0m in \u001b[0;36mquick_execute\u001b[0;34m(op_name, num_outputs, inputs, attrs, ctx, name)\u001b[0m\n\u001b[1;32m     58\u001b[0m     \u001b[0mctx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mensure_initialized\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     59\u001b[0m     tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,\n\u001b[0;32m---> 60\u001b[0;31m                                         inputs, attrs, num_outputs)\n\u001b[0m\u001b[1;32m     61\u001b[0m   \u001b[0;32mexcept\u001b[0m \u001b[0mcore\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_NotOkStatusException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     62\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mname\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mInvalidArgumentError\u001b[0m:  Input to reshape is a tensor with 102400 values, but the requested shape requires a multiple of 86528\n\t [[node sequential/flatten/Reshape (defined at <ipython-input-13-e0e33cfba0df>:6) ]] [Op:__inference_test_function_1309]\n\nFunction call stack:\ntest_function\n"]}]},{"cell_type":"code","metadata":{"id":"oO31IcR5zIm3"},"source":["# Class Activation Maps\n","# Grad-CAM "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"fTpdKm8Lxz6z"},"source":["model.save(\"model_adv.h5\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"euUcrMaCM24o","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1620278294828,"user_tz":-330,"elapsed":371,"user":{"displayName":"Addhyan Garg","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi8z0i_UERBmHE9rA0hp6i8etq2wnLZYRDC4gjp5A=s64","userId":"17569604095461225003"}},"outputId":"08eb2a9c-8c93-4785-e3a5-85971719a098"},"source":["model.evaluate_generator(train_generator)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[0.11288762837648392, 0.9598214030265808]"]},"metadata":{"tags":[]},"execution_count":26}]},{"cell_type":"code","metadata":{"id":"_BK4VvfzNJcs","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1620278305399,"user_tz":-330,"elapsed":8370,"user":{"displayName":"Addhyan Garg","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi8z0i_UERBmHE9rA0hp6i8etq2wnLZYRDC4gjp5A=s64","userId":"17569604095461225003"}},"outputId":"b395c637-3c1c-49a9-e5a0-3187f5a22380"},"source":["model.evaluate_generator(validation_generator)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/engine/training.py:1877: UserWarning: `Model.evaluate_generator` is deprecated and will be removed in a future version. Please use `Model.evaluate`, which supports generators.\n","  warnings.warn('`Model.evaluate_generator` is deprecated and '\n"],"name":"stderr"},{"output_type":"execute_result","data":{"text/plain":["[0.0640922412276268, 0.9833333492279053]"]},"metadata":{"tags":[]},"execution_count":27}]},{"cell_type":"code","metadata":{"id":"EYDJQE35NOU9"},"source":["model= load_model(\"model_adv.h5\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"4aEGiLZ-NcQ6"},"source":["import os\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"s3lJC5prNeFP","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1620278313562,"user_tz":-330,"elapsed":985,"user":{"displayName":"Addhyan Garg","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi8z0i_UERBmHE9rA0hp6i8etq2wnLZYRDC4gjp5A=s64","userId":"17569604095461225003"}},"outputId":"b20e8680-edf6-44d7-e3d8-29d59c54b0b4"},"source":["train_generator.class_indices"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'Covid': 0, 'Normal': 1}"]},"metadata":{"tags":[]},"execution_count":30}]},{"cell_type":"code","metadata":{"id":"11dVH5aENhwx"},"source":["y_actual=[]\n","y_test=[]\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"7461LTW5NmHL"},"source":["for i in os.listdir(\"./CovidDataset/Val/Normal/\"):\n","  img=image.load_img(\"./CovidDataset/Val/Normal/\"+i,target_size=(224,224))\n","  img=image.img_to_array(img)\n","  img=np.expand_dims(img,axis=0)\n","  p=model.predict_classes(img)\n","  y_test.append(p[0,0])\n","  y_actual.append(1)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"SjTwS1ynOab4"},"source":["for i in os.listdir(\"./CovidDataset/Val/Covid/\"):\n","  img=image.load_img(\"./CovidDataset/Val/Covid/\"+i,target_size=(224,224))\n","  img=image.img_to_array(img)\n","  img=np.expand_dims(img,axis=0)\n","  p=model.predict_classes(img)\n","  y_test.append(p[0,0])\n","  y_actual.append(1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"aW6YPI7RPM6P"},"source":["y_actual=np.array(y_actual)\n","y_test=np.array(y_test)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"09uhs3a3PUza"},"source":["from sklearn.metrics import confusion_matrix\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"XEh45-n3Pd0M"},"source":["cm=confusion_matrix(y_actual,y_test)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ECTBECyDP3bH"},"source":["import seaborn as sns"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"lwsZ_9UdP5QK","colab":{"base_uri":"https://localhost:8080/","height":286},"executionInfo":{"status":"ok","timestamp":1620278343093,"user_tz":-330,"elapsed":1265,"user":{"displayName":"Addhyan Garg","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi8z0i_UERBmHE9rA0hp6i8etq2wnLZYRDC4gjp5A=s64","userId":"17569604095461225003"}},"outputId":"2f79be66-7be9-4f88-b7b9-fe36d2179f58"},"source":["sns.heatmap(cm,cmap=\"plasma\",annot=True)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f91a359b0d0>"]},"metadata":{"tags":[]},"execution_count":38},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]}]}